name: Auto Sign PR Commits

on:
  pull_request:
    types: [opened, labeled, synchronize]

jobs:
  sign-commits:
    if: contains(github.event.pull_request.labels.*.name, 'figma-plugin')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Generate App Token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Recommit with Original Authors
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          # Get all commits in the PR
          commits=$(git log origin/${{ github.base_ref }}..${{ github.event.pull_request.head.sha }} --format="%H")

          # Create a temporary branch
          git checkout -b temp-branch

          # Cherry pick each commit
          for commit in $commits; do
            # Get the original commit info
            author_name=$(git log -1 --format="%an" $commit)
            author_email=$(git log -1 --format="%ae" $commit)
            message=$(git log -1 --format=%B $commit)
            date=$(git log -1 --format=%ad $commit)
            
            # Cherry pick without committing
            git cherry-pick -n $commit
            
            # Commit with original author but signed by app
            git -c user.name="$author_name" \
                -c user.email="$author_email" \
                commit --date="$date" \
                -m "$message" \
                --author="$author_name <$author_email>"
          done

          # Force push back to the PR branch
          git push --force origin temp-branch:${{ github.event.pull_request.head.ref }}
